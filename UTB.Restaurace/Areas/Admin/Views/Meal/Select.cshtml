@model IList<Meal>
@{
    ViewData["Title"] = "Meal Administration";
    string currentSort = ViewData["CurrentSort"] as string ?? "";
    string sortDirection = ViewData["SortDirection"] as string ?? "asc";
}

<h1>@ViewData["Title"]</h1>

<a asp-action="Create">Create Meal</a>
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<!-- Add FontAwesome for sorting icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

@if (Model != null && Model.Count > 0)
{
    <div class="container">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">
                        @nameof(Meal.Id)
                        <a href="@Url.Action("Select", new { sortColumn = "Id", sortDirection = ViewData["SortDirection"] as string == "asc" ? "desc" : "asc" })">
                            <i class="fas @(ViewData["CurrentSort"] as string == "Id" && ViewData["SortDirection"] as string == "asc" ? "fa-arrow-up" : "fa-arrow-down")" style="float: right;"></i>
                        </a>
                    </th>
                    <th scope="col" style="width: 15%;">@nameof(Meal.Name)</th>
                    <th scope="col" style="width: 40%;">@nameof(Meal.Description)</th>
                    <th scope="col">
                        @nameof(Meal.Price)
                        <a href="@Url.Action("Select", new { sortColumn = "Price", sortDirection = ViewData["SortDirection"] as string == "asc" ? "desc" : "asc" })">
                            <i class="fas @(ViewData["CurrentSort"] as string == "Price" && ViewData["SortDirection"] as string == "asc" ? "fa-arrow-up" : "fa-arrow-down")" style="float: right;"></i>
                        </a>
                    </th>
                    <th scope="col">@nameof(Meal.ImageSrc)</th>
                    <th scope="col">
                        @nameof(Meal.Category)
                        <a href="@Url.Action("Select", new { sortColumn = "Category", sortDirection = ViewData["SortDirection"] as string == "asc" ? "desc" : "asc" })">
                            <i class="fas @(ViewData["CurrentSort"] as string == "Category" && ViewData["SortDirection"] as string == "asc" ? "fa-arrow-up" : "fa-arrow-down")" style="float: right;"></i>
                        </a>
                    </th>
                    <th scope="col">
                        @nameof(Meal.Available)
                        <a href="@Url.Action("Select", new { sortColumn = "Available", sortDirection = ViewData["SortDirection"] as string == "asc" ? "desc" : "asc" })">
                            <i class="fas @(ViewData["CurrentSort"] as string == "Available" && ViewData["SortDirection"] as string == "asc" ? "fa-arrow-up" : "fa-arrow-down")" style="float: right;"></i>
                        </a>
                    </th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>


            <tbody>
                @foreach (var meal in Model)
                {
                    <tr>
                        <th scope="row">@meal.Id</th>
                        <td class="left-align">@meal.Name</td>
                        <td class="left-align">@meal.Description</td>
                        <td>@meal.Price CZK</td>
                        <td>
                            <img src="@meal.ImageSrc" alt="Meal Image" style="max-width: 100px; max-height: 100px;" />
                        </td>
                        <td>@meal.Category</td>
                        <td>
                            <form asp-action="ToggleAvailability" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@meal.Id" />
                                <input type="checkbox" name="available" value="true" @(meal.Available ? "checked" : "") onclick="return ConfirmToggleAvailability(this);" />
                            </form>
                        </td>
                        <td>
                            <div class="button-group">
                                <a asp-action="Delete" asp-route-id="@meal.Id" onclick="return ConfirmDelete();" class="btn btn-danger btn-sm">
                                    <i class="bi bi-trash"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@meal.Id" class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>Meals table is empty!</p>
}


@section Scripts
{
    <script src="~/js/dialogs.js"></script>
    <script>
        function ConfirmToggleAvailability(checkbox) {
            var confirmed = confirm("Are you sure you want to change the availability?");
            if (confirmed) {
                checkbox.form.submit();
            } else {
                checkbox.checked = !checkbox.checked;
            }
            return false;
        }
    </script>
}

@section Styles
{
    <style>
        .button-group {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
        }

        .btn {
            margin: 0;
        }

        .table th,
        .table td {
            text-align: center;
            vertical-align: middle;
        }

        .table td.left-align {
            text-align: left;
        }

        .table tbody tr:nth-child(odd) {
            background-color: #f5f5f5;
        }

        .table tbody tr:nth-child(even) {
            background-color: #ffffff;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1;
            transition: background-color 0.2s ease-in-out;
        }

        .table img {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 4px;
        }

        .table {
            width: 100%;
            table-layout: auto;
        }

        .container {
            max-width: 95%; /*maybe broken */
        }

        .table th, .table td {
            padding: 12px;
        }

        /* Checkbox styling */
        input[type="checkbox"] {
            width: 20px;
            height: 20px;
            margin: 0;
            cursor: pointer;
            appearance: none;
            border: 2px solid #ccc;
            border-radius: 4px;
            display: inline-block;
        }

        input[type="checkbox"]:checked {
            background-color: #28a745;
            border-color: #28a745;
        }

        input[type="checkbox"]:not(:checked) {
            border-color: #dc3545;
        }

        th {
            position: relative;
        }

        th a {
            display: inline-block;
            text-decoration: none;
            color: inherit;
        }

        th a i {
            margin-left: 5px; /* Space between the text and the arrow icon */
            font-size: 0.8em; /* Size of the arrow icon */
            color: #888; /* Default icon color */
        }

        th a:hover i {
            color: #000; /* Icon color on hover */
        }

        th a:hover {
            color: #007bff; /* Change the text color on hover */
        }

        th i {
            position: absolute;
            right: 10px; /* Move the arrow icon to the right */
            top: 50%;
            transform: translateY(-50%); /* Vertically center the arrow */
        }



    </style>
}